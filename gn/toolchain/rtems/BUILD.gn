# Copyright 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//gn/toolchain/gcc_toolchain.gni")
import("//gn/toolchain/rtems/rtems.gni")

declare_args() {
  rtems_toolchain_prefix = ""

}

_path_split_list = string_split(rtems_toolchain_dirs)
foreach(token, _path_split_list) {
  if (token == "rtems") {

  }

}

rtems_toolchain_prefix = "${target_cpu}-rtems${rtems_version}-"
rtems_pkgname = "${rtems_toolchain_prefix}${rtems_bsp}"


gcc_toolchain("rtems") {
  toolchain_prefix = rtems_toolchain_prefix
  spec_flags = "-B${_rtems_path} -qrtems "
  common_flags = "-Wall -Wimplicit-function-declaration -Wstrict-prototypes -fno-common -fdata-sections -ffunction-sections"
  extra_cppflags = spec_flags + common_flags
  extra_cflags = "-std=gnu17"
  extra_cxxflags = "-std=c++17"
  extra_asmflags = "-x assembler-with-cpp"
  extra_ldflags = spec_flags + "-Wl,--gc-sections"

  cc = "${toolchain_prefix}gcc"
  cxx = "${toolchain_prefix}g++"
  ar = "${toolchain_prefix}ar"
  ld = cxx
  size = "${toolchain_prefix}size"
  if (use_rtl) {
    syms = "rtems-syms"
  }

  # Output linker map files for binary size analysis.
  enable_linker_map = true
  executable_extension = ".elf"
  toolchain_args = {
    current_cpu = target_cpu
    current_os = "rtems"
  }
}

config("include") {
    include_dirs = ["${_rtems_path}/include"]
}


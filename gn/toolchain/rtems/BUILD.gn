# Copyright 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//gn/toolchain/gcc_toolchain.gni")
import("//gn/toolchain/rtems/rtems.gni")

# rtems_compile_options = [
#   '--variable=prefix',
#   '--variable=includedir',
#   '--variable=libdir',
#   '--variable=ABI_FLAGS',
#   '--libs-only-other',
#   '--variable=RTEMS_ARCH',
#   '--variable=RTEMS_BSP',
#   '--variable=RTEMS_MAJOR'
# ]

pkgargs = [
  "${rtems_pkgname}",
  "--path", "${rtems_pkgpath}"
]

pkgresult = exec_script("//gn/toolchain/rtems/finder.py", pkgargs, "value")
#INSTALL_PREFIX = pkgresult[0]
INCLUDE_DIR    = pkgresult[1]
ABI_FLAGS      = pkgresult[2]
LD_FLAGS       = pkgresult[3]
target_cpu     = pkgresult[4]
#RTEMS_BSP      = pkgresult[5]
RTEMS_MAJOR    = pkgresult[6]

rtems_toolchain_prefix = "${target_cpu}-rtems${RTEMS_MAJOR}-"

gcc_toolchain("rtems") {
  spec_flags = "${LD_FLAGS}"
  common_flags = "-Wall -Wimplicit-function-declaration -Wstrict-prototypes -fno-common -fdata-sections -ffunction-sections"
  extra_cppflags = spec_flags + common_flags
  extra_cflags = "-std=gnu17"
  extra_cxxflags = "-std=c++17"
  extra_asmflags = "-x assembler-with-cpp"
  extra_ldflags = spec_flags

  cc  = "${rtems_toolchain_prefix}gcc"
  cxx = "${rtems_toolchain_prefix}g++"
  ar  = "${rtems_toolchain_prefix}ar"
  ld  = cxx
  size = "${rtems_toolchain_prefix}size"
  if (use_rtl) {
    syms = "rtems-syms"
  }

  # Output linker map files for binary size analysis.
  enable_linker_map = true
  executable_extension = ".elf"
  toolchain_args = {
    current_cpu = target_cpu
    current_os = "rtems"
  }
}

config("rtems_config") {
    include_dirs = ["${INCLUDE_DIR}"]
    cflags = ["${ABI_FLAGS}"]
}

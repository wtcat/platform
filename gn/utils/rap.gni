import("//gn/common.gni")

template("generate_rap") {
    assert(defined(invoker.KERNEL))
    assert(defined(invoker.INPUT))
    if (defined(invoker.LIBPATH)) {
        LIBPATH = string_join(" ", invoker.LIBPATH)
    } else {
        LIBPATH = ""
    }
    if (defined(invoker.LIBS)) {
        LIBS = string_join(" ", invoker.LIBS)
    } else {
        LIBS = ""
    }
    if (defined(invoker.FORMAT)) {
        FORMAT = invoker.FORMAT
    } else {
        FORMAT = "rap"
    }

    objfile = invoker.KERNEL
    infiles = string_join(" ", invoker.INPUT)
    # foreach(file, invoker.INPUT) {
    #     rebase_path("${root_out_dir}/${objfile}.elf")
    # }

    action(target_name) {
        script = "//gn/utils/rap.py"
        sources = ["$root_out_dir/${objfile}.elf"]
        outputs = ["$root_out_dir/${target_name}.rap"]
        args = [
            "--base", rebase_path("${root_out_dir}/${objfile}.elf"),
            "--input", "${infiles}",
            "--output-format", "${FORMAT}",
            "--output", rebase_path("${root_out_dir}/${target_name}.rap"),
            "--libpath", "${LIBPATH}",
            "--libs", "${LIBS}"
        ]
        deps = invoker.deps
    }
}



template("module") {
    src_target = target_name
    dst_target = "${target_name}_action"
    source_setï¼ˆtarget_name) {
        forward_variables_from(invoker, "*", ["configs"])
        if (defined(invoker.configs)) {
            configs += invoker.configs
        }
    }
    action(dst_target) {
        script = "//gn/utils/rap.py"
        sources = ["$root_out_dir/${objfile}.elf"]
        outputs = ["$root_out_dir/${target_name}.rap"]
        args = [
            "--base", rebase_path("${root_out_dir}/${objfile}.elf"),
            "--input", "${infiles}",
            "--output-format", "${FORMAT}",
            "--output", rebase_path("${root_out_dir}/${target_name}.rap"),
            "--libpath", "${LIBPATH}",
            "--libs", "${LIBS}"
        ]
        deps = [":${src_target}"]
    }
}


declare_args() {
    # Uboot load address
    uboot_ldaddr = 0

    # Uboot entry_address
    # The entry_address is equal to load_address when 
    # entry_address is -1.
    uboot_enaddr = 0 
}

template("mkimage") {
    assert(defined(invoker.loadaddr), "Not found load address")
    loadaddr = invoker.loadaddr
    if (defined(invoker.arch)) {
        arch = invoker.arch
    } else {
        arch = "arm"
    }
    if (defined(invoker.os)) {
        os = invoker.os
    } else {
        os = "rtems"
    }
    if (defined(invoker.comp)) {
        comp = invoker.comp
    } else {
        comp = "none"
    }
    if (defined(invoker.entryaddr)) {
        entryaddr = invoker.entryaddr
    } else {
        entryaddr = loadaddr
    }
    action(target_name) {
        script = "//gn/utils/mkimage.py"
        sources = ["${root_out_dir}/kernel.bin"]
        outputs = ["${root_out_dir}/kernel.img"]
        args = [
            "--arch", "${arch}",
            "--os", "${os}",
            "--image","kernel",
            "--compression","${comp}",
            "--loadaddr", "${loadaddr}",
            "--entryaddr", "${entryaddr}",
            "--name", "${os}",
            "--binfile", rebase_path("${root_out_dir}/kernel.bin")
        ]
        deps = invoker.deps
    }
}
